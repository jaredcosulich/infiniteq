.tabs
  %ul.nav.nav-tabs{role: 'tablist'}
    %li.active{role: 'presentation'}
      %a{href: '#verified', role: 'tab', aria: {controls: 'verified'}, data: {toggle: 'tab'}}
        Verified
        %span.label{class: "label-#{records.verified.count > 0 ? 'success' : 'default'}"}
          = records.verified.count
    - if type == 'questions'
      %li.hidden-xs{role: 'presentation'}
        %a{href: '#unanswered', role: 'tab', aria: {controls: 'unanswered'}, data: {toggle: 'tab'}}
          Unanswered
          %span.label{class: "label-#{records.verified.unanswered.count > 0 ? 'danger' : 'default'}"}
            = records.verified.unanswered.count
    %li.hidden-xs{role: 'presentation'}
      %a{href: '#unverified', role: 'tab', aria: {controls: 'unverified'}, data: {toggle: 'tab'}}
        Unverified
        %span.label{class: "label-#{records.unverified.count > 0 ? 'warning' : 'default'}"}
          = records.unverified.count
    %li.hidden-xs.hidden-md{role: 'presentation'}
      %a{href: '#flagged', role: 'tab', aria: {controls: 'flagged'}, data: {toggle: 'tab'}}
        Flagged
        %span.label.label-default= records.flagged.count
    %li.hidden-xs.hidden-md.hidden-sm{role: 'presentation'}
      %a{href: '#suspect', role: 'tab', aria: {controls: 'suspect'}, data: {toggle: 'tab'}}
        Suspect
        %span.label.label-default= records.suspect.count
    %li.hidden-lg{role: 'presentation', class: 'dropdown'}
      %a.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
        Other
        %span.caret
      %ul.dropdown-menu
        - if type == 'questions'
          %li.visible-xs{role: 'presentation'}
            %a{href: '#unanswered', role: 'tab', aria: {controls: 'unanswered'}, data: {toggle: 'tab'}}
              Unanswered
              %span.label{class: "label-#{records.verified.unanswered.count > 0 ? 'danger' : 'default'}"}
                = records.verified.unanswered.count
        %li.visible-xs{role: 'presentation'}
          %a{href: '#unverified', role: 'tab', aria: {controls: 'unverified'}, data: {toggle: 'tab'}}
            Unverified
            %span.label{class: "label-#{records.unverified.count > 0 ? 'warning' : 'default'}"}
              = records.unverified.count
        %li.hidden-sm{role: 'presentation'}
          %a{href: '#flagged', role: 'tab', aria: {controls: 'flagged'}, data: {toggle: 'tab'}}
            Flagged
            %span.label.label-default= records.flagged.count
        %li{role: 'presentation'}
          %a{href: '#suspect', role: 'tab', aria: {controls: 'suspect'}, data: {toggle: 'tab'}}
            Suspect
            %span.label.label-default= records.suspect.count

.votable.tab-content
  .tab-pane.active{id: 'verified', role: 'tabpanel'}
    - paginated_records = records.verified.page(params[:page])
    = render paginated_records, tab: 'verified'
    - if records.verified.empty?
      %h4.none= "No #{type} have been verified yet."
    .text-center
      = paginate paginated_records, :outer_window => 3, :window => 1

  - if type == 'questions'
    .tab-pane{id: 'unanswered', role: 'tabpanel'}
      - paginated_records = records.verified.unanswered.page(params[:page])
      = render paginated_records, tab: 'unanswered'
      - if records.verified.unanswered.empty?
        %h4.none there are currently no unanswered verified questions.
      .text-center
        = paginate paginated_records, :outer_window => 3, :window => 1

  .tab-pane{id: 'unverified', role: 'tabpanel'}
    - paginated_records = records.unverified.page(params[:page])
    = render paginated_records, tab: 'unverified'
    - if records.unverified.empty?
      %h4.none= "There are currently no unverified #{type}."
    .text-center
      = paginate paginated_records, :outer_window => 3, :window => 1

  .tab-pane{id: 'flagged', role: 'tabpanel'}
    - paginated_records = records.flagged.page(params[:page])
    = render paginated_records, tab: 'flagged'
    - if records.flagged.empty?
      %h4.none= "There are currently no flagged #{type}."
    .text-center
      = paginate paginated_records, :outer_window => 3, :window => 1

  .tab-pane{id: 'suspect', role: 'tabpanel'}
    - paginated_records = records.suspect.page(params[:page])
    = render paginated_records, tab: 'suspect'
    - if records.suspect.empty?
      %h4.none= "There are currently no suspect #{type}."
    .text-center
      = paginate paginated_records, :outer_window => 3, :window => 1
