.content

  %h3
    = @grouped_flag.object.class.to_s
    Flag

  %br

  %h4
    = @grouped_flag.object.class.to_s
    Being Flagged:
  %p= markdown(@grouped_flag.object.text)

  %br

  %h4
    Flagged By
    = pluralize(@grouped_flag.not_disputing.length, 'Person:', plural: 'People:')
  %p
    - @grouped_flag.not_disputing.map(&:user).uniq.each do |user|
      = user.present? ? link_to(@grouped_flag.user.name, @grouped_flag.user) : 'Anonymous'

  %br

  %h4
    Disputed By
    = pluralize(@grouped_flag.disputing.length, 'Person:', plural: 'People:')
  %p
    - @grouped_flag.disputing.map(&:user).uniq.each do |user|
      = user.present? ? link_to(@grouped_flag.user.name, @grouped_flag.user) : 'Anonymous'

  %br

  %h4 Reviewed By (Editor):
  %p= @grouped_flag.confirmed? ? link_to(@grouped_flag.editor.name, @grouped_flag.editor) : 'Not yet reviewed'

  %br

  %h4 Flag Reason:
  %p= @grouped_flag.reason_string

  %br

  %h4 Action Taken:
  %p= @grouped_flag.action_string
  %p
    = @grouped_flag.object.class.to_s
    currently has
    = pluralize(@grouped_flag.object.display_votes, 'trust vote')

  %br

  %h4 Details
  %p
    - if (detailed_flags = @grouped_flag.detailed_flags).present?
      - detailed_flags.each do |df|
        .details
          %strong
            = "#{df.user_name}:"
          = df.details
    - else
      No details provided.

  %br
  %br
  %br

  %p
    - if user_signed_in? && (user_flag = @grouped_flag.flags.select { |f| f.user == current_user }.first)
      = link_to('Delete Flag', user_flag, method: :delete, class: 'btn btn-reject')
    - else
      %button.btn.btn-action{data: {toggle: 'modal', target: "##{@grouped_flag.object.total_identifier}-flag-modal"}}
        = fa_icon('flag')
        Confirm Flag

      &nbsp;
      &nbsp;

      %button.btn.btn-reject{data: {toggle: 'modal', target: "##{@grouped_flag.object.total_identifier}-flag-modal-dispute"}}
        Dispute Flag

  %br
  %br

  %p= link_to("< Back To #{@grouped_flag.object.class.to_s}", @grouped_flag.object)


  = render partial: 'flags/flag_modal', locals: {flag: @grouped_flag.object.flags.new(reason: @grouped_flag.reason)}
  = render partial: 'flags/flag_modal', locals: {flag: @grouped_flag.object.flags.new(reason: @grouped_flag.reason, dispute: true)}
